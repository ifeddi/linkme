version: "3.3"

services:
  backend:
    build: ./backend
    container_name: symfony_api
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www/html
      - vendor:/var/www/html/vendor
      - var:/var/www/html/var
    environment:
      DATABASE_URL: "mysql://symfony:symfony@db:3306/symfony"
      APP_ENV: "prod"
      APP_DEBUG: "0"
      ELASTICSEARCH_HOST: "elasticsearch"
      ELASTICSEARCH_PORT: "9200"
      JWT_PASSPHRASE: "your-jwt-passphrase-here"
      MERCURE_URL: "http://mercure/.well-known/mercure"
      MERCURE_PUBLISHER_JWT_KEY: "BD1acaTbTjyOFXZ0Sk7QUNWvCF7t1GMxajBWuiNlJzU="
      MERCURE_SUBSCRIBER_JWT_KEY: "BD1acaTbTjyOFXZ0Sk7QUNWvCF7t1GMxajBWuiNlJzU="
    depends_on:
      - db
      - elasticsearch
    command: sh -c "composer install --no-interaction --no-ansi --no-progress --no-dev --prefer-dist --optimize-autoloader && php bin/console cache:clear --no-warmup && php bin/console cache:warmup && php -S 0.0.0.0:8000 -t public"

  frontend:
    build: ./frontend
    container_name: vue_frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev -- --host 0.0.0.0 --port 5173
    depends_on:
      - backend

  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: symfony
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
    ports:
      - "3307:3306"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8080:80"
    depends_on:
      - db

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  mercure:
    image: dunglas/mercure
    container_name: mercure
    restart: unless-stopped
    environment:
      - SERVER_NAME=:80
      - MERCURE_PUBLISHER_JWT_KEY="BD1acaTbTjyOFXZ0Sk7QUNWvCF7t1GMxajBWuiNlJzU="
      - MERCURE_SUBSCRIBER_JWT_KEY="BD1acaTbTjyOFXZ0Sk7QUNWvCF7t1GMxajBWuiNlJzU="
      - MERCURE_EXTRA_DIRECTIVES=cors_origins http://localhost:5173
    ports:
      - "3000:80"

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "8025:8025"  # UI web
      - "1025:1025"  # SMTP
      
volumes:
  esdata:
  vendor:
  var:
  dbdata: